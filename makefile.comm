
.SUFFIXES: .html .wiki

# wiki转html方法一:
# (1) wiki转换html耗时达2s+
# (2) 终端会输出警告: "Vim: Warning: Output is not to a terminal"
#.wiki.html1:
#	@res=`vim -c "call vimwiki#html#Wiki2HTML(expand(VimwikiGet('path_html')),expand('%'))|q" $<` \
#	|| (echo -e "[$$PWD/$<] \e[31;1m=>\e[0m [$$PWD/$@] [\e[31;1mFAIL\e[0m]" ; false) \
#	&& (echo -e "[$$PWD/$<] \e[31;1m=>\e[0m [$$PWD/$@] [\e[32;1mSUCC\e[0m]" ; true)



# wiki转html方法二:
# 本方法比方法一要快很多，但要注意：
# (1) vim成功返回时，$?的值是1，所以echo前面是||，而非&&
# (2) 同一个wiki与html放在同一样目录
.wiki.html2:
	vim -e $< -c "call vimwiki#html#Wiki2HTML(expand(VimwikiGet('path_html')),expand('%'))|q" >/dev/null \
	|| echo -e "[$$PWD/$<] \e[31;1m=>\e[0m [$$PWD/$@] [\e[32;1mSUCC\e[0m]" 



# wiki转html方法三:
# 本方法较方法二可以提供更友好的用户访问方式，如:
# http://host/2015/01/hello 访问的是 http://host/2015/01/hello/index.html
# 对应的wiki是http://host/2015/01/hello.wiki（真实html是http://host/2015/01/hello.html）
# 由于Github Pages不支持软链，所以只保留两份HTML
.wiki.html:
	vim -e $< -c "call vimwiki#html#Wiki2HTML(expand(VimwikiGet('path_html')),expand('%')) | quit" >/dev/null \
	|| (   mkdir -p $(<:%.wiki=%) \
		&& cp $@ $(<:%.wiki=%)/index.html \
		&& echo -e "[$$PWD/$<] \e[31;1m=>\e[0m [$$PWD/$@] [\e[32;1mSUCC\e[0m]")
	@#ln -sf ../$@ $(<:%.wiki=%)/index.html  # FIXME: 支持软链可以节省一倍空间，且支持多